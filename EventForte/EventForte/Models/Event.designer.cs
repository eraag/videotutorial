#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventForte.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Event")]
	public partial class EventDataContext : System.Data.Linq.DataContext
	{
        public string catid { get; set; }
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertEventBlock(EventBlock instance);
    partial void UpdateEventBlock(EventBlock instance);
    partial void DeleteEventBlock(EventBlock instance);
    partial void InsertVenue(Venue instance);
    partial void UpdateVenue(Venue instance);
    partial void DeleteVenue(Venue instance);
    partial void InsertEventType(EventType instance);
    partial void UpdateEventType(EventType instance);
    partial void DeleteEventType(EventType instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public EventDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EventConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EventDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EventDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<EventBlock> EventBlocks
		{
			get
			{
				return this.GetTable<EventBlock>();
			}
		}
		
		public System.Data.Linq.Table<Venue> Venues
		{
			get
			{
				return this.GetTable<Venue>();
			}
		}
		
		public System.Data.Linq.Table<EventType> EventTypes
		{
			get
			{
				return this.GetTable<EventType>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEventForMember")]
		public ISingleResult<sp_GetEventForMemberResult> sp_GetEventForMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberId", DbType="BigInt")] System.Nullable<long> memberId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberId, month, year);
			return ((ISingleResult<sp_GetEventForMemberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetYear")]
		public ISingleResult<GetYearResult> GetYear()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetYearResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteEvent")]
		public int sp_DeleteEvent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventID", DbType="NVarChar(MAX)")] string eventID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SearchEventOnCategory")]
		public ISingleResult<sp_SearchEventOnCategoryResult> sp_SearchEventOnCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberId", DbType="BigInt")] System.Nullable<long> memberId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="Int")] System.Nullable<int> month, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeId", DbType="Int")] System.Nullable<int> typeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberId, month, year, typeId);
			return ((ISingleResult<sp_SearchEventOnCategoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCollaborator")]
		public ISingleResult<sp_GetCollaboratorResult> sp_GetCollaborator([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberId", DbType="BigInt")] System.Nullable<long> memberId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberId);
			return ((ISingleResult<sp_GetCollaboratorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetGuestStatus")]
		public ISingleResult<sp_GetGuestStatusResult> sp_GetGuestStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficialPId", DbType="BigInt")] System.Nullable<long> officialPId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GuestStatus", DbType="Char(1)")] System.Nullable<char> guestStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), officialPId, guestStatus);
			return ((ISingleResult<sp_GetGuestStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEventsForMyEvents")]
		public ISingleResult<sp_GetEventsForMyEventsResult> sp_GetEventsForMyEvents([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventId", DbType="NVarChar(MAX)")] string eventId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Month", DbType="NVarChar(2)")] string month)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId, month);
			return ((ISingleResult<sp_GetEventsForMyEventsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCollaboratorForMyEvents")]
		public ISingleResult<sp_GetCollaboratorForMyEventsResult> sp_GetCollaboratorForMyEvents([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventId", DbType="NVarChar(MAX)")] string eventId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventId);
			return ((ISingleResult<sp_GetCollaboratorForMyEventsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EventId;
		
		private System.Nullable<long> _OrganizerId;
		
		private System.Nullable<int> _TypeId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Description;
		
		private System.Nullable<bool> _Archived;
		
		private System.Nullable<bool> _RequestDeleted;
		
		private System.Nullable<bool> _ENABLED_RSVP;
		
		private System.Nullable<System.DateTime> _GlobalRSVPDeadline;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private EntitySet<EventBlock> _EventBlocks;
		
		private EntityRef<EventType> _EventType;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(long value);
    partial void OnEventIdChanged();
    partial void OnOrganizerIdChanging(System.Nullable<long> value);
    partial void OnOrganizerIdChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnArchivedChanging(System.Nullable<bool> value);
    partial void OnArchivedChanged();
    partial void OnRequestDeletedChanging(System.Nullable<bool> value);
    partial void OnRequestDeletedChanged();
    partial void OnENABLED_RSVPChanging(System.Nullable<bool> value);
    partial void OnENABLED_RSVPChanged();
    partial void OnGlobalRSVPDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnGlobalRSVPDeadlineChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public Event()
		{
			this._EventBlocks = new EntitySet<EventBlock>(new Action<EventBlock>(this.attach_EventBlocks), new Action<EventBlock>(this.detach_EventBlocks));
			this._EventType = default(EntityRef<EventType>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerId", DbType="BigInt")]
		public System.Nullable<long> OrganizerId
		{
			get
			{
				return this._OrganizerId;
			}
			set
			{
				if ((this._OrganizerId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizerIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizerId = value;
					this.SendPropertyChanged("OrganizerId");
					this.OnOrganizerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._EventType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDeleted", DbType="Bit")]
		public System.Nullable<bool> RequestDeleted
		{
			get
			{
				return this._RequestDeleted;
			}
			set
			{
				if ((this._RequestDeleted != value))
				{
					this.OnRequestDeletedChanging(value);
					this.SendPropertyChanging();
					this._RequestDeleted = value;
					this.SendPropertyChanged("RequestDeleted");
					this.OnRequestDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED_RSVP", DbType="Bit")]
		public System.Nullable<bool> ENABLED_RSVP
		{
			get
			{
				return this._ENABLED_RSVP;
			}
			set
			{
				if ((this._ENABLED_RSVP != value))
				{
					this.OnENABLED_RSVPChanging(value);
					this.SendPropertyChanging();
					this._ENABLED_RSVP = value;
					this.SendPropertyChanged("ENABLED_RSVP");
					this.OnENABLED_RSVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalRSVPDeadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> GlobalRSVPDeadline
		{
			get
			{
				return this._GlobalRSVPDeadline;
			}
			set
			{
				if ((this._GlobalRSVPDeadline != value))
				{
					this.OnGlobalRSVPDeadlineChanging(value);
					this.SendPropertyChanging();
					this._GlobalRSVPDeadline = value;
					this.SendPropertyChanged("GlobalRSVPDeadline");
					this.OnGlobalRSVPDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(MAX)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventBlock", Storage="_EventBlocks", ThisKey="EventId", OtherKey="EventId")]
		public EntitySet<EventBlock> EventBlocks
		{
			get
			{
				return this._EventBlocks;
			}
			set
			{
				this._EventBlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventType_Event", Storage="_EventType", ThisKey="TypeId", OtherKey="TypeId", IsForeignKey=true)]
		public EventType EventType
		{
			get
			{
				return this._EventType.Entity;
			}
			set
			{
				EventType previousValue = this._EventType.Entity;
				if (((previousValue != value) 
							|| (this._EventType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventType.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._EventType.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._TypeId = value.TypeId;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EventType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Event", Storage="_Member", ThisKey="OrganizerId", OtherKey="PID", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._OrganizerId = value.PID;
					}
					else
					{
						this._OrganizerId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventBlocks(EventBlock entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_EventBlocks(EventBlock entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventBlock")]
	public partial class EventBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EID;
		
		private long _EventId;
		
		private string _Name;
		
		private System.Nullable<bool> _UsingVenue;
		
		private System.Nullable<int> _VenueId;
		
		private string _DefaultLocationName;
		
		private string _DefaultAddress;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private System.Nullable<bool> _ENABLED_SCHEDULE;
		
		private System.Nullable<bool> _ENABLED_ARRANGEMENTS;
		
		private System.Nullable<bool> _ENABLED_DRAFTS;
		
		private System.Nullable<bool> _ENABLED_RSVP;
		
		private System.Nullable<System.DateTime> _RSVPDeadline;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<Venue> _Venue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEIDChanging(long value);
    partial void OnEIDChanged();
    partial void OnEventIdChanging(long value);
    partial void OnEventIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUsingVenueChanging(System.Nullable<bool> value);
    partial void OnUsingVenueChanged();
    partial void OnVenueIdChanging(System.Nullable<int> value);
    partial void OnVenueIdChanged();
    partial void OnDefaultLocationNameChanging(string value);
    partial void OnDefaultLocationNameChanged();
    partial void OnDefaultAddressChanging(string value);
    partial void OnDefaultAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnENABLED_SCHEDULEChanging(System.Nullable<bool> value);
    partial void OnENABLED_SCHEDULEChanged();
    partial void OnENABLED_ARRANGEMENTSChanging(System.Nullable<bool> value);
    partial void OnENABLED_ARRANGEMENTSChanged();
    partial void OnENABLED_DRAFTSChanging(System.Nullable<bool> value);
    partial void OnENABLED_DRAFTSChanged();
    partial void OnENABLED_RSVPChanging(System.Nullable<bool> value);
    partial void OnENABLED_RSVPChanged();
    partial void OnRSVPDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnRSVPDeadlineChanged();
    #endregion
		
		public EventBlock()
		{
			this._Event = default(EntityRef<Event>);
			this._Venue = default(EntityRef<Venue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EID
		{
			get
			{
				return this._EID;
			}
			set
			{
				if ((this._EID != value))
				{
					this.OnEIDChanging(value);
					this.SendPropertyChanging();
					this._EID = value;
					this.SendPropertyChanged("EID");
					this.OnEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="BigInt NOT NULL")]
		public long EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingVenue", DbType="Bit")]
		public System.Nullable<bool> UsingVenue
		{
			get
			{
				return this._UsingVenue;
			}
			set
			{
				if ((this._UsingVenue != value))
				{
					this.OnUsingVenueChanging(value);
					this.SendPropertyChanging();
					this._UsingVenue = value;
					this.SendPropertyChanged("UsingVenue");
					this.OnUsingVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueId", DbType="Int")]
		public System.Nullable<int> VenueId
		{
			get
			{
				return this._VenueId;
			}
			set
			{
				if ((this._VenueId != value))
				{
					if (this._Venue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVenueIdChanging(value);
					this.SendPropertyChanging();
					this._VenueId = value;
					this.SendPropertyChanged("VenueId");
					this.OnVenueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLocationName", DbType="NVarChar(MAX)")]
		public string DefaultLocationName
		{
			get
			{
				return this._DefaultLocationName;
			}
			set
			{
				if ((this._DefaultLocationName != value))
				{
					this.OnDefaultLocationNameChanging(value);
					this.SendPropertyChanging();
					this._DefaultLocationName = value;
					this.SendPropertyChanged("DefaultLocationName");
					this.OnDefaultLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultAddress", DbType="NVarChar(MAX)")]
		public string DefaultAddress
		{
			get
			{
				return this._DefaultAddress;
			}
			set
			{
				if ((this._DefaultAddress != value))
				{
					this.OnDefaultAddressChanging(value);
					this.SendPropertyChanging();
					this._DefaultAddress = value;
					this.SendPropertyChanged("DefaultAddress");
					this.OnDefaultAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED_SCHEDULE", DbType="Bit")]
		public System.Nullable<bool> ENABLED_SCHEDULE
		{
			get
			{
				return this._ENABLED_SCHEDULE;
			}
			set
			{
				if ((this._ENABLED_SCHEDULE != value))
				{
					this.OnENABLED_SCHEDULEChanging(value);
					this.SendPropertyChanging();
					this._ENABLED_SCHEDULE = value;
					this.SendPropertyChanged("ENABLED_SCHEDULE");
					this.OnENABLED_SCHEDULEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED_ARRANGEMENTS", DbType="Bit")]
		public System.Nullable<bool> ENABLED_ARRANGEMENTS
		{
			get
			{
				return this._ENABLED_ARRANGEMENTS;
			}
			set
			{
				if ((this._ENABLED_ARRANGEMENTS != value))
				{
					this.OnENABLED_ARRANGEMENTSChanging(value);
					this.SendPropertyChanging();
					this._ENABLED_ARRANGEMENTS = value;
					this.SendPropertyChanged("ENABLED_ARRANGEMENTS");
					this.OnENABLED_ARRANGEMENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED_DRAFTS", DbType="Bit")]
		public System.Nullable<bool> ENABLED_DRAFTS
		{
			get
			{
				return this._ENABLED_DRAFTS;
			}
			set
			{
				if ((this._ENABLED_DRAFTS != value))
				{
					this.OnENABLED_DRAFTSChanging(value);
					this.SendPropertyChanging();
					this._ENABLED_DRAFTS = value;
					this.SendPropertyChanged("ENABLED_DRAFTS");
					this.OnENABLED_DRAFTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED_RSVP", DbType="Bit")]
		public System.Nullable<bool> ENABLED_RSVP
		{
			get
			{
				return this._ENABLED_RSVP;
			}
			set
			{
				if ((this._ENABLED_RSVP != value))
				{
					this.OnENABLED_RSVPChanging(value);
					this.SendPropertyChanging();
					this._ENABLED_RSVP = value;
					this.SendPropertyChanged("ENABLED_RSVP");
					this.OnENABLED_RSVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSVPDeadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> RSVPDeadline
		{
			get
			{
				return this._RSVPDeadline;
			}
			set
			{
				if ((this._RSVPDeadline != value))
				{
					this.OnRSVPDeadlineChanging(value);
					this.SendPropertyChanging();
					this._RSVPDeadline = value;
					this.SendPropertyChanged("RSVPDeadline");
					this.OnRSVPDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventBlock", Storage="_Event", ThisKey="EventId", OtherKey="EventId", IsForeignKey=true)]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.EventBlocks.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.EventBlocks.Add(this);
						this._EventId = value.EventId;
					}
					else
					{
						this._EventId = default(long);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venue_EventBlock", Storage="_Venue", ThisKey="VenueId", OtherKey="VenueId", IsForeignKey=true)]
		public Venue Venue
		{
			get
			{
				return this._Venue.Entity;
			}
			set
			{
				Venue previousValue = this._Venue.Entity;
				if (((previousValue != value) 
							|| (this._Venue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venue.Entity = null;
						previousValue.EventBlocks.Remove(this);
					}
					this._Venue.Entity = value;
					if ((value != null))
					{
						value.EventBlocks.Add(this);
						this._VenueId = value.VenueId;
					}
					else
					{
						this._VenueId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Venue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venue")]
	public partial class Venue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VenueId;
		
		private string _LocationName;
		
		private string _StreetAddress;
		
		private string _PostalCode;
		
		private string _City;
		
		private System.Nullable<int> _StateId;
		
		private System.Nullable<int> _CountryId;
		
		private EntitySet<EventBlock> _EventBlocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVenueIdChanging(int value);
    partial void OnVenueIdChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    #endregion
		
		public Venue()
		{
			this._EventBlocks = new EntitySet<EventBlock>(new Action<EventBlock>(this.attach_EventBlocks), new Action<EventBlock>(this.detach_EventBlocks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VenueId
		{
			get
			{
				return this._VenueId;
			}
			set
			{
				if ((this._VenueId != value))
				{
					this.OnVenueIdChanging(value);
					this.SendPropertyChanging();
					this._VenueId = value;
					this.SendPropertyChanged("VenueId");
					this.OnVenueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="NVarChar(MAX)")]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venue_EventBlock", Storage="_EventBlocks", ThisKey="VenueId", OtherKey="VenueId")]
		public EntitySet<EventBlock> EventBlocks
		{
			get
			{
				return this._EventBlocks;
			}
			set
			{
				this._EventBlocks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventBlocks(EventBlock entity)
		{
			this.SendPropertyChanging();
			entity.Venue = this;
		}
		
		private void detach_EventBlocks(EventBlock entity)
		{
			this.SendPropertyChanging();
			entity.Venue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventType")]
	public partial class EventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeId;
		
		private string _TypeName;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public EventType()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventType_Event", Storage="_Events", ThisKey="TypeId", OtherKey="TypeId")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.EventType = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.EventType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PW;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<int> _Tier;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<decimal> _RGCreationReliability;
		
		private string _ImgThumbURL;
		
		private EntitySet<Event> _Events;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(long value);
    partial void OnPIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPWChanging(string value);
    partial void OnPWChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnTierChanging(System.Nullable<int> value);
    partial void OnTierChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnRGCreationReliabilityChanging(System.Nullable<decimal> value);
    partial void OnRGCreationReliabilityChanged();
    partial void OnImgThumbURLChanging(string value);
    partial void OnImgThumbURLChanged();
    #endregion
		
		public Member()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(254)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW", DbType="NVarChar(50)")]
		public string PW
		{
			get
			{
				return this._PW;
			}
			set
			{
				if ((this._PW != value))
				{
					this.OnPWChanging(value);
					this.SendPropertyChanging();
					this._PW = value;
					this.SendPropertyChanged("PW");
					this.OnPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tier", DbType="Int")]
		public System.Nullable<int> Tier
		{
			get
			{
				return this._Tier;
			}
			set
			{
				if ((this._Tier != value))
				{
					this.OnTierChanging(value);
					this.SendPropertyChanging();
					this._Tier = value;
					this.SendPropertyChanged("Tier");
					this.OnTierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGCreationReliability", DbType="Decimal(8,7)")]
		public System.Nullable<decimal> RGCreationReliability
		{
			get
			{
				return this._RGCreationReliability;
			}
			set
			{
				if ((this._RGCreationReliability != value))
				{
					this.OnRGCreationReliabilityChanging(value);
					this.SendPropertyChanging();
					this._RGCreationReliability = value;
					this.SendPropertyChanged("RGCreationReliability");
					this.OnRGCreationReliabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgThumbURL", DbType="NVarChar(MAX)")]
		public string ImgThumbURL
		{
			get
			{
				return this._ImgThumbURL;
			}
			set
			{
				if ((this._ImgThumbURL != value))
				{
					this.OnImgThumbURLChanging(value);
					this.SendPropertyChanging();
					this._ImgThumbURL = value;
					this.SendPropertyChanged("ImgThumbURL");
					this.OnImgThumbURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Event", Storage="_Events", ThisKey="PID", OtherKey="OrganizerId")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	public partial class sp_GetEventForMemberResult
	{
		
		private long _EventId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Description;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _LocationName;
		
		private string _DefaultLocationName;
		
		public sp_GetEventForMemberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="BigInt NOT NULL")]
		public long EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this._EventId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(MAX)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this._ImageURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLocationName", DbType="NVarChar(MAX)")]
		public string DefaultLocationName
		{
			get
			{
				return this._DefaultLocationName;
			}
			set
			{
				if ((this._DefaultLocationName != value))
				{
					this._DefaultLocationName = value;
				}
			}
		}
	}
	
	public partial class GetYearResult
	{
		
		private System.Nullable<int> _memdate;
		
		public GetYearResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memdate", DbType="Int")]
		public System.Nullable<int> memdate
		{
			get
			{
				return this._memdate;
			}
			set
			{
				if ((this._memdate != value))
				{
					this._memdate = value;
				}
			}
		}
	}
	
	public partial class sp_SearchEventOnCategoryResult
	{
		
		private long _EventId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Description;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _LocationName;
		
		private string _DefaultLocationName;
		
		public sp_SearchEventOnCategoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="BigInt NOT NULL")]
		public long EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this._EventId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(MAX)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this._ImageURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLocationName", DbType="NVarChar(MAX)")]
		public string DefaultLocationName
		{
			get
			{
				return this._DefaultLocationName;
			}
			set
			{
				if ((this._DefaultLocationName != value))
				{
					this._DefaultLocationName = value;
				}
			}
		}
	}
	
	public partial class sp_GetCollaboratorResult
	{
		
		private string _initial;
		
		private long _eventid;
		
		public sp_GetCollaboratorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_initial", DbType="NVarChar(2)")]
		public string initial
		{
			get
			{
				return this._initial;
			}
			set
			{
				if ((this._initial != value))
				{
					this._initial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="BigInt NOT NULL")]
		public long eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					this._eventid = value;
				}
			}
		}
	}
	
	public partial class sp_GetGuestStatusResult
	{
		
		private long _eventid;
		
		public sp_GetGuestStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="BigInt NOT NULL")]
		public long eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					this._eventid = value;
				}
			}
		}
	}
	
	public partial class sp_GetEventsForMyEventsResult
	{
		
		private System.Nullable<int> _EventId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private string _Description;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _LocationName;
		
		private string _DefaultLocationName;
		
		public sp_GetEventsForMyEventsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int")]
		public System.Nullable<int> EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this._EventId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this._FromDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this._ToDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="NVarChar(MAX)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this._ImageURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLocationName", DbType="NVarChar(MAX)")]
		public string DefaultLocationName
		{
			get
			{
				return this._DefaultLocationName;
			}
			set
			{
				if ((this._DefaultLocationName != value))
				{
					this._DefaultLocationName = value;
				}
			}
		}
	}
	
	public partial class sp_GetCollaboratorForMyEventsResult
	{
		
		private string _initial;
		
		private System.Nullable<int> _eventid;
		
		public sp_GetCollaboratorForMyEventsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_initial", DbType="NVarChar(20)")]
		public string initial
		{
			get
			{
				return this._initial;
			}
			set
			{
				if ((this._initial != value))
				{
					this._initial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="Int")]
		public System.Nullable<int> eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					this._eventid = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
